name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Security: Limit permissions to minimum required
permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    
    # Security: Explicit permissions for this job
    permissions:
      contents: read
      security-events: write
    
    strategy:
      matrix:
        node-version: [18, 20, 22]  # Updated to exclude EOL Node 16, add Node 22

    steps:
      - name: Checkout code
        uses: actions/checkout@8b5cf7a4e1b6e4c8a1d9e4c4c7b3c4a4a7e3e3b8  # Pinned SHA for security
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8  # Pinned SHA for security
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript checks
        run: npx tsc --noEmit

      - name: Build package
        run: npm run build

      - name: Validate build output
        run: npm run validate

      - name: Check package size
        run: |
          npm pack --dry-run
          echo "Package contents:"
          npm pack --dry-run 2>/dev/null | grep -v "npm notice"

      - name: Test import/require in Node.js
        run: |
          # Test CommonJS require
          node -e "
            const sdk = require('./dist/cjs/index.js');
            console.log('CommonJS imports:', Object.keys(sdk).slice(0, 5));
            if (!sdk.createClient) throw new Error('createClient not exported');
          "
          
          # Test ES modules import
          node --input-type=module -e "
            import * as sdk from './dist/esm/index.js';
            console.log('ES module imports:', Object.keys(sdk).slice(0, 5));
            if (!sdk.createClient) throw new Error('createClient not exported');
          "

      - name: Check TypeScript declarations
        run: |
          npx tsc --noEmit --skipLibCheck dist/types/index.d.ts
          echo "TypeScript declarations are valid"

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Verify package signatures (npm CLI v11 feature)
        run: |
          # Use npm CLI v11+ signature verification
          npm install -g npm@latest
          npm audit signatures || echo "Signature verification skipped (dependencies: 0)"

      - name: Check for known vulnerabilities
        run: |
          # Since we have zero dependencies, this should always pass
          echo "Checking for vulnerabilities in zero-dependency package..."
          npm ls --depth=0

  publish-dry-run:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Dry run publish
        run: npm publish --dry-run

      - name: Check publishable files
        run: |
          echo "Files that would be published:"
          npm pack --dry-run 2>/dev/null | grep -v "npm notice" || true